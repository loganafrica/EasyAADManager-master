{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "environment": {
      "type": "string"
    },
    "organization": {
      "type": "string"
    },
    "project": {
      "type": "string"
    }
  },
  "variables": {
    "hostingPlanName": "[concat(parameters('organization'), '-sp-', parameters('project'), '-', parameters('environment'), '-we')]"
  },
    "resources": [
      {
        "apiVersion": "2015-08-01",
        "name": "[variables('hostingPlanName')]",
        "type": "Microsoft.Web/serverfarms",
        "location": "[resourceGroup().location]",
        "tags": {
          "displayName": "HostingPlan"
        },
        "sku": {
          "name": "B1",
          "capacity": 1
        },
        "properties": {
          "name": "[variables('hostingPlanName')]"
        }
      },
      {
        "apiVersion": "2014-04-01",
        "name": "[concat(variables('hostingPlanName'), '-', resourceGroup().name)]",
        "type": "Microsoft.Insights/autoscalesettings",
        "location": "[resourceGroup().location]",
        "tags": {
          "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]": "Resource",
          "displayName": "AutoScaleSettings"
        },
        "dependsOn": [
          "[concat('Microsoft.Web/serverfarms/', variables('hostingPlanName'))]"
        ],
        "properties": {
          "profiles": [
            {
              "name": "Default",
              "capacity": {
                "minimum": 1,
                "maximum": 2,
                "default": 1
              },
              "rules": [
                {
                  "metricTrigger": {
                    "metricName": "CpuPercentage",
                    "metricResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]",
                    "timeGrain": "PT1M",
                    "statistic": "Average",
                    "timeWindow": "PT10M",
                    "timeAggregation": "Average",
                    "operator": "GreaterThan",
                    "threshold": 80.0
                  },
                  "scaleAction": {
                    "direction": "Increase",
                    "type": "ChangeCount",
                    "value": 1,
                    "cooldown": "PT10M"
                  }
                },
                {
                  "metricTrigger": {
                    "metricName": "CpuPercentage",
                    "metricResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]",
                    "timeGrain": "PT1M",
                    "statistic": "Average",
                    "timeWindow": "PT1H",
                    "timeAggregation": "Average",
                    "operator": "LessThan",
                    "threshold": 60.0
                  },
                  "scaleAction": {
                    "direction": "Decrease",
                    "type": "ChangeCount",
                    "value": 1,
                    "cooldown": "PT1H"
                  }
                }
              ]
            }
          ],
          "enabled": false,
          "name": "[concat(variables('hostingPlanName'), '-', resourceGroup().name)]",
          "targetResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]"
        }
      },
      {
        "apiVersion": "2014-04-01",
        "name": "[concat('CPUHigh ', variables('hostingPlanName'))]",
        "type": "Microsoft.Insights/alertrules",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[concat('Microsoft.Web/serverfarms/', variables('hostingPlanName'))]"
        ],
        "tags": {
          "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]": "Resource",
          "displayName": "CPUHighAlertRule"
        },
        "properties": {
          "name": "[concat('CPUHigh ', variables('hostingPlanName'))]",
          "description": "[concat('The average CPU is high across all the instances of ', variables('hostingPlanName'))]",
          "isEnabled": true,
          "condition": {
            "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
            "dataSource": {
              "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
              "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]",
              "metricName": "CpuPercentage"
            },
            "operator": "GreaterThan",
            "threshold": 90,
            "windowSize": "PT15M"
          },
          "action": {
            "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
            "sendToServiceOwners": true,
            "customEmails": [ "clemens@al77.nl" ]
          }
        }
      },
      {
        "apiVersion": "2014-04-01",
        "name": "[concat('LongHttpQueue ', variables('hostingPlanName'))]",
        "type": "Microsoft.Insights/alertrules",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[concat('Microsoft.Web/serverfarms/', variables('hostingPlanName'))]"
        ],
        "tags": {
          "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]": "Resource",
          "displayName": "LongHttpQueueAlertRule"
        },
        "properties": {
          "name": "[concat('LongHttpQueue ', variables('hostingPlanName'))]",
          "description": "[concat('The HTTP queue for the instances of ', variables('hostingPlanName'), ' has a large number of pending requests.')]",
          "isEnabled": true,
          "condition": {
            "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
            "dataSource": {
              "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
              "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]",
              "metricName": "HttpQueueLength"
            },
            "operator": "GreaterThan",
            "threshold": 100.0,
            "windowSize": "PT5M"
          },
          "action": {
            "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
            "sendToServiceOwners": true,
            "customEmails": [ "clemens@al77.nl" ]
          }
        }
      }
    ]
  }